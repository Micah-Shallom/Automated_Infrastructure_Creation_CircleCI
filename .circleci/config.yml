# Use the latest 2.1 version of CircleCI pipeline process engi
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
commands:
  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file server.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --parameter-overrides file://serverParams.json \
                --region us-east-1
  configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
                # You can get this ID in the section where you registered the SSH Key
                fingerprints: ["fb:dc:2d:cb:99:03:50:5d:34:1a:c6:ef:e9:60:22:59"] 
        # install ansible   now   ok  
        - run:
            name: Install Ansible
            command: |
              # Install Ansible
              apk add --update ansible
        - run:
            name: Run Playbook and Configure server
            command: |
              # Your command  
              ansible-playbook -i inventory.txt main.yml  
  # Exercise: Smoke Testing
  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - checkout
        - run: apk add --update curl
        - run:
            name: smoke test
            command: return 1                 
        - destroy_environment  
             
# Invoke jobs via workflows
workflows:
  my-workflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      - smoke_test:
            requires:
                - create_infrastructure